/* Simple test case to test interfaces for libjvm */

#include <dlfcn.h>
#include <stdio.h>

#ifdef __APPLE__
    #define SONAME "libjvm.dylib"
#elif __linux__
    #define SONAME "libjvm.so"
#else
    #error "Unknown build environment"
#endif

#include "gtest/gtest.h"

/*
 * Tests the presence of all the signatures available in CVMI. This test case
 * is very brittle, as the paths are hardcoded - needs to be fixed with some
 * proper organisation with Automake/Makefile support.
 */
TEST(InterfaceTest, AllSignatures) {
    void *handle = dlopen("src/.libs/" SONAME, RTLD_NOW);
    EXPECT_TRUE(handle != NULL);

    const char *symbols[176] = {
        "JNI_CreateJavaVM",
        "JNI_GetDefaultJavaVMInitArgs",
        "JNI_GetCreatedJavaVMs",
        "JVM_GetMethodParameters",
        "JVM_GetInterfaceVersion",
        "JVM_IHashCode",
        "JVM_MonitorWait",
        "JVM_MonitorNotify",
        "JVM_MonitorNotifyAll",
        "JVM_Clone",
        "JVM_InternString",
        "JVM_CurrentTimeMillis",
        "JVM_NanoTime",
        "JVM_GetNanoTimeAdjustment",
        "JVM_ArrayCopy",
        "JVM_InitProperties",
        "JVM_Halt",
        "JVM_GC",
        "JVM_MaxObjectInspectionAge",
        "JVM_TotalMemory",
        "JVM_FreeMemory",
        "JVM_MaxMemory",
        "JVM_ActiveProcessorCount",
        "JVM_LoadLibrary",
        "JVM_UnloadLibrary",
        "JVM_FindLibraryEntry",
        "JVM_IsSupportedJNIVersion",
        "JVM_GetVmArguments",
        "JVM_FillInStackTrace",
        "JVM_InitStackTraceElementArray",
        "JVM_InitStackTraceElement",
        "JVM_CallStackWalk",
        "JVM_MoreStackWalk",
        "JVM_StartThread",
        "JVM_StopThread",
        "JVM_IsThreadAlive",
        "JVM_SuspendThread",
        "JVM_ResumeThread",
        "JVM_SetThreadPriority",
        "JVM_Yield",
        "JVM_Sleep",
        "JVM_CurrentThread",
        "JVM_CountStackFrames",
        "JVM_Interrupt",
        "JVM_IsInterrupted",
        "JVM_HoldsLock",
        "JVM_DumpAllStacks",
        "JVM_GetAllThreads",
        "JVM_SetNativeThreadName",
        "JVM_DumpThreads",
        "JVM_CurrentLoadedClass",
        "JVM_CurrentClassLoader",
        "JVM_GetClassContext",
        "JVM_ClassDepth",
        "JVM_ClassLoaderDepth",
        "JVM_GetSystemPackage",
        "JVM_GetSystemPackages",
        "JVM_GetAndClearReferencePendingList",
        "JVM_HasReferencePendingList",
        "JVM_WaitForReferencePendingList",
        "JVM_LatestUserDefinedLoader",
        "JVM_GetArrayLength",
        "JVM_GetArrayElement",
        "JVM_GetPrimitiveArrayElement",
        "JVM_SetArrayElement",
        "JVM_SetPrimitiveArrayElement",
        "JVM_NewArray",
        "JVM_NewMultiArray",
        "JVM_GetCallerClass",
        "JVM_FindPrimitiveClass",
        "JVM_FindClassFromBootLoader",
        "JVM_FindClassFromCaller",
        "JVM_FindClassFromClass",
        "JVM_FindLoadedClass",
        "JVM_DefineClass",
        "JVM_DefineClassWithSource",
        "JVM_DefineModule",
        "JVM_SetBootLoaderUnnamedModule",
        "JVM_AddModuleExports",
        "JVM_AddModuleExportsToAllUnnamed",
        "JVM_AddModuleExportsToAll",
        "JVM_AddReadsModule",
        "JVM_AddModulePackage",
        "JVM_GetModuleByPackageName",
        "JVM_GetClassName",
        "JVM_GetClassInterfaces",
        "JVM_IsInterface",
        "JVM_GetClassSigners",
        "JVM_SetClassSigners",
        "JVM_GetProtectionDomain",
        "JVM_IsArrayClass",
        "JVM_IsPrimitiveClass",
        "JVM_GetClassModifiers",
        "JVM_GetDeclaredClasses",
        "JVM_GetDeclaringClass",
        "JVM_GetSimpleBinaryName",
        "JVM_GetClassSignature",
        "JVM_GetClassAnnotations",
        "JVM_GetClassTypeAnnotations",
        "JVM_GetFieldTypeAnnotations",
        "JVM_GetMethodTypeAnnotations",
        "JVM_GetClassDeclaredMethods",
        "JVM_GetClassDeclaredFields",
        "JVM_GetClassDeclaredConstructors",
        "JVM_GetClassAccessFlags",
        "JVM_GetClassConstantPool",
        "JVM_ConstantPoolGetSize",
        "JVM_ConstantPoolGetClassAt",
        "JVM_ConstantPoolGetClassAtIfLoaded",
        "JVM_ConstantPoolGetMethodAt",
        "JVM_ConstantPoolGetMethodAtIfLoaded",
        "JVM_ConstantPoolGetFieldAt",
        "JVM_ConstantPoolGetFieldAtIfLoaded",
        "JVM_ConstantPoolGetMemberRefInfoAt",
        "JVM_ConstantPoolGetNameAndTypeRefInfoAt",
        "JVM_ConstantPoolGetNameAndTypeRefIndexAt",
        "JVM_ConstantPoolGetClassRefIndexAt",
        "JVM_ConstantPoolGetIntAt",
        "JVM_ConstantPoolGetLongAt",
        "JVM_ConstantPoolGetFloatAt",
        "JVM_ConstantPoolGetDoubleAt",
        "JVM_ConstantPoolGetStringAt",
        "JVM_ConstantPoolGetUTF8At",
        "JVM_ConstantPoolGetTagAt",
        "JVM_DoPrivileged",
        "JVM_GetInheritedAccessControlContext",
        "JVM_GetStackAccessControlContext",
        "JVM_RegisterSignal",
        "JVM_RaiseSignal",
        "JVM_FindSignal",
        "JVM_DesiredAssertionStatus",
        "JVM_AssertionStatusDirectives",
        "JVM_SupportsCX8",
        "JVM_GetClassNameUTF",
        "JVM_GetClassCPTypes",
        "JVM_GetClassCPEntriesCount",
        "JVM_GetClassFieldsCount",
        "JVM_GetClassMethodsCount",
        "JVM_GetMethodIxExceptionIndexes",
        "JVM_GetMethodIxExceptionsCount",
        "JVM_GetMethodIxByteCode",
        "JVM_GetMethodIxByteCodeLength",
        "JVM_GetMethodIxExceptionTableEntry",
        "JVM_GetMethodIxExceptionTableLength",
        "JVM_GetFieldIxModifiers",
        "JVM_GetMethodIxModifiers",
        "JVM_GetMethodIxLocalsCount",
        "JVM_GetMethodIxArgsSize",
        "JVM_GetMethodIxMaxStack",
        "JVM_IsConstructorIx",
        "JVM_IsVMGeneratedMethodIx",
        "JVM_GetMethodIxNameUTF",
        "JVM_GetMethodIxSignatureUTF",
        "JVM_GetCPFieldNameUTF",
        "JVM_GetCPMethodNameUTF",
        "JVM_GetCPMethodSignatureUTF",
        "JVM_GetCPFieldSignatureUTF",
        "JVM_GetCPClassNameUTF",
        "JVM_GetCPFieldClassNameUTF",
        "JVM_GetCPMethodClassNameUTF",
        "JVM_GetCPFieldModifiers",
        "JVM_GetCPMethodModifiers",
        "JVM_ReleaseUTF",
        "JVM_IsSameClassPackage",
        "JVM_NativePath",
        "JVM_RawMonitorCreate",
        "JVM_RawMonitorDestroy",
        "JVM_RawMonitorEnter",
        "JVM_RawMonitorExit",
        "JVM_InvokeMethod",
        "JVM_NewInstanceFromConstructor",
        "JVM_GetManagement",
        "JVM_InitAgentProperties",
        "JVM_GetTemporaryDirectory",
        "JVM_GetEnclosingMethodInfo",
        "JVM_GetVersionInfo"
    };

    for(int i = 0; i < 176; i++) {
        void *sym = dlsym(handle, symbols[i]);
        if (sym == NULL) {
            printf("%d'''%s'''\n", i, symbols[i]);
        }
        EXPECT_TRUE(sym != NULL);
    }

    int result = dlclose(handle);
    EXPECT_EQ(result, 0);
}
